{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, NativeBaseProvider, Button, Icon, Select } from 'native-base';\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\nimport hex_sha1 from \"../functions/SHA1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Signup(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sex = _useState6[0],\n      setSex = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      role = _useState8[0],\n      setRole = _useState8[1];\n\n  function RegistrationHandler() {\n    var api = 'http://52.70.229.148:8000/users/';\n    var fullName = name.split(\" \");\n    var firstName = fullName[0];\n    var lastName = fullName[1];\n    var data = {\n      \"userID\": hex_sha1(email),\n      \"firstName\": firstName,\n      \"lastName\": lastName,\n      \"DoB\": \"_\",\n      \"address\": \"_\",\n      \"email\": email,\n      \"pcp\": \"_\",\n      \"sex\": sex,\n      \"role\": role\n    };\n\n    try {\n      fetch(api, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n  }\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.Middle,\n        children: _jsx(Text, {\n          style: styles.LoginText,\n          children: \"Signup\"\n        })\n      }), _jsxs(View, {\n        style: styles.text2,\n        children: [_jsx(Text, {\n          children: \"Already have account? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Login\");\n          },\n          children: _jsx(Text, {\n            style: styles.signupText,\n            children: \" Login \"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.buttonStyle,\n        children: _jsx(View, {\n          style: styles.emailInput,\n          children: _jsx(Input, {\n            InputLeftElement: _jsx(Icon, {\n              as: _jsx(FontAwesome5, {\n                name: \"user-secret\"\n              }),\n              size: \"sm\",\n              m: 2,\n              _light: {\n                color: \"black\"\n              },\n              _dark: {\n                color: \"gray.300\"\n              }\n            }),\n            variant: \"outline\",\n            placeholder: \"Name\",\n            _light: {\n              placeholderTextColor: \"blueGray.400\"\n            },\n            _dark: {\n              placeholderTextColor: \"blueGray.50\"\n            },\n            value: name,\n            onChangeText: setName\n          })\n        })\n      }), _jsx(View, {\n        style: styles.buttonStyleX,\n        children: _jsx(View, {\n          style: styles.emailInput,\n          children: _jsx(Input, {\n            InputLeftElement: _jsx(Icon, {\n              as: _jsx(MaterialCommunityIcons, {\n                name: \"email\"\n              }),\n              size: \"sm\",\n              m: 2,\n              _light: {\n                color: \"black\"\n              },\n              _dark: {\n                color: \"gray.300\"\n              }\n            }),\n            variant: \"outline\",\n            placeholder: \"Email\",\n            _light: {\n              placeholderTextColor: \"blueGray.400\"\n            },\n            _dark: {\n              placeholderTextColor: \"blueGray.50\"\n            },\n            value: email,\n            onChangeText: setEmail\n          })\n        })\n      }), _jsx(View, {\n        style: styles.buttonStyleX,\n        children: _jsx(View, {\n          style: styles.emailInput,\n          children: _jsxs(Select, {\n            selectedValue: sex,\n            InputLeftElement: _jsx(Icon, {\n              as: _jsx(FontAwesome5, {\n                name: \"key\"\n              }),\n              size: \"sm\",\n              m: 2,\n              _light: {\n                color: \"black\"\n              },\n              _dark: {\n                color: \"gray.300\"\n              }\n            }),\n            variant: \"outline\",\n            placeholder: \"Sex\",\n            _light: {\n              placeholderTextColor: \"blueGray.400\"\n            },\n            _dark: {\n              placeholderTextColor: \"blueGray.50\"\n            },\n            onValueChange: function onValueChange(itemValue) {\n              return setSex(itemValue);\n            },\n            children: [_jsx(Select.Item, {\n              label: \"Male\",\n              value: \"M\"\n            }), _jsx(Select.Item, {\n              label: \"Female\",\n              value: \"F\"\n            }), _jsx(Select.Item, {\n              label: \"Other\",\n              value: \"O\"\n            })]\n          })\n        })\n      }), _jsx(View, {\n        style: styles.buttonStyleX,\n        children: _jsx(View, {\n          style: styles.emailInput,\n          children: _jsxs(Select, {\n            selectedValue: role,\n            InputLeftElement: _jsx(Icon, {\n              as: _jsx(FontAwesome5, {\n                name: \"key\"\n              }),\n              size: \"sm\",\n              m: 2,\n              _light: {\n                color: \"black\"\n              },\n              _dark: {\n                color: \"gray.300\"\n              }\n            }),\n            variant: \"outline\",\n            placeholder: \"Role\",\n            _light: {\n              placeholderTextColor: \"blueGray.400\"\n            },\n            _dark: {\n              placeholderTextColor: \"blueGray.50\"\n            },\n            onValueChange: function onValueChange(itemValue) {\n              return setRole(itemValue);\n            },\n            children: [_jsx(Select.Item, {\n              label: \"Patient\",\n              value: \"P\"\n            }), _jsx(Select.Item, {\n              label: \"Provider\",\n              value: \"D\"\n            })]\n          })\n        })\n      }), _jsx(View, {\n        style: styles.buttonStyle,\n        children: _jsx(Button, {\n          style: styles.buttonDesign,\n          onPress: RegistrationHandler(),\n          children: \"REGISTER NOW\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  LoginText: {\n    marginTop: 100,\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  Middle: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text2: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingTop: 5\n  },\n  signupText: {\n    fontWeight: 'bold'\n  },\n  emailField: {\n    marginTop: 30,\n    marginLeft: 15\n  },\n  emailInput: {\n    marginTop: 10,\n    marginRight: 5\n  },\n  buttonStyle: {\n    marginTop: 30,\n    marginLeft: 15,\n    marginRight: 15\n  },\n  buttonStyleX: {\n    marginTop: 12,\n    marginLeft: 15,\n    marginRight: 15\n  },\n  buttonDesign: {\n    backgroundColor: '#026efd'\n  },\n  lineStyle: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    alignItems: 'center'\n  },\n  imageStyle: {\n    width: 80,\n    height: 80,\n    marginLeft: 20\n  },\n  boxStyle: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EC530/HealthCare-Platform/HealthApp/screens/Signup.js"],"names":["React","useState","Input","NativeBaseProvider","Button","Icon","Select","FontAwesome5","MaterialCommunityIcons","hex_sha1","Signup","navigation","name","setName","email","setEmail","sex","setSex","role","setRole","RegistrationHandler","api","fullName","split","firstName","lastName","data","fetch","method","headers","body","JSON","stringify","error","console","log","styles","container","Middle","LoginText","text2","navigate","signupText","buttonStyle","emailInput","color","placeholderTextColor","buttonStyleX","itemValue","buttonDesign","StyleSheet","create","flex","backgroundColor","marginTop","fontSize","fontWeight","alignItems","justifyContent","flexDirection","paddingTop","emailField","marginLeft","marginRight","lineStyle","imageStyle","width","height","boxStyle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,KAAT,EAAgBC,kBAAhB,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,MAAlD,QAAgE,aAAhE;AACA,SAASC,YAAT,EAAuBC,sBAAvB,QAAqD,oBAArD;AAEA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,MAAT,OAAgC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC3C,kBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsBd,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOe,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAAwBhB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AAGA,WAASC,mBAAT,GAA+B;AAC3B,QAAIC,GAAG,GAAG,kCAAV;AAEA,QAAIC,QAAQ,GAAGV,IAAI,CAACW,KAAL,CAAW,GAAX,CAAf;AACA,QAAIC,SAAS,GAAGF,QAAQ,CAAC,CAAD,CAAxB;AACA,QAAIG,QAAQ,GAAGH,QAAQ,CAAC,CAAD,CAAvB;AAEA,QAAII,IAAI,GAAG;AACP,gBAAUjB,QAAQ,CAACK,KAAD,CADX;AAEP,mBAAaU,SAFN;AAGP,kBAAYC,QAHL;AAIP,aAAO,GAJA;AAKP,iBAAW,GALJ;AAMP,eAASX,KANF;AAOP,aAAO,GAPA;AAQP,aAAOE,GARA;AASP,cAAQE;AATD,KAAX;;AAWA,QAAI;AACFS,MAAAA,KAAK,CAACN,GAAD,EAAM;AACPO,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFF;AAMPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AANC,OAAN,CAAL;AAQD,KATD,CASE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD;AACJ;;AAEH,SACE,KAAC,kBAAD;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AADF,QADF,EAIE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA,mBACE,KAAC,IAAD;AAAA;AAAA,UADF,EAEE,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAM7B,UAAU,CAAC8B,QAAX,CAAoB,OAApB,CAAN;AAAA,WAA3B;AAAA,oBAAgE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACM,UAApB;AAAA;AAAA;AAAhE,UAFF;AAAA,QAJF,EAUE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,WAApB;AAAA,kBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEP,MAAM,CAACQ,UAApB;AAAA,oBACE,KAAC,KAAD;AACE,YAAA,gBAAgB,EACd,KAAC,IAAD;AACE,cAAA,EAAE,EAAE,KAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB,gBADN;AAEE,cAAA,IAAI,EAAC,IAFP;AAGE,cAAA,CAAC,EAAE,CAHL;AAIE,cAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAE;AADD,eAJV;AAOE,cAAA,KAAK,EAAE;AACLA,gBAAAA,KAAK,EAAE;AADF;AAPT,cAFJ;AAcE,YAAA,OAAO,EAAC,SAdV;AAeE,YAAA,WAAW,EAAC,MAfd;AAgBE,YAAA,MAAM,EAAE;AACNC,cAAAA,oBAAoB,EAAE;AADhB,aAhBV;AAmBE,YAAA,KAAK,EAAE;AACLA,cAAAA,oBAAoB,EAAE;AADjB,aAnBT;AAsBE,YAAA,KAAK,EAAElC,IAtBT;AAuBE,YAAA,YAAY,EAAEC;AAvBhB;AADF;AAFF,QAVF,EA0CE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEuB,MAAM,CAACW,YAApB;AAAA,kBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACQ,UAApB;AAAA,oBACE,KAAC,KAAD;AACE,YAAA,gBAAgB,EACd,KAAC,IAAD;AACE,cAAA,EAAE,EAAE,KAAC,sBAAD;AAAwB,gBAAA,IAAI,EAAC;AAA7B,gBADN;AAEE,cAAA,IAAI,EAAC,IAFP;AAGE,cAAA,CAAC,EAAE,CAHL;AAIE,cAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAE;AADD,eAJV;AAOE,cAAA,KAAK,EAAE;AACLA,gBAAAA,KAAK,EAAE;AADF;AAPT,cAFJ;AAcE,YAAA,OAAO,EAAC,SAdV;AAeE,YAAA,WAAW,EAAC,OAfd;AAgBE,YAAA,MAAM,EAAE;AACNC,cAAAA,oBAAoB,EAAE;AADhB,aAhBV;AAmBE,YAAA,KAAK,EAAE;AACLA,cAAAA,oBAAoB,EAAE;AADjB,aAnBT;AAsBE,YAAA,KAAK,EAAEhC,KAtBT;AAuBE,YAAA,YAAY,EAAEC;AAvBhB;AADF;AAFF,QA1CF,EA0EE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEqB,MAAM,CAACW,YAApB;AAAA,kBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACQ,UAApB;AAAA,oBACE,MAAC,MAAD;AAAQ,YAAA,aAAa,EAAE5B,GAAvB;AACE,YAAA,gBAAgB,EACd,KAAC,IAAD;AACE,cAAA,EAAE,EAAE,KAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB,gBADN;AAEE,cAAA,IAAI,EAAC,IAFP;AAGE,cAAA,CAAC,EAAE,CAHL;AAIE,cAAA,MAAM,EAAE;AACN6B,gBAAAA,KAAK,EAAE;AADD,eAJV;AAOE,cAAA,KAAK,EAAE;AACLA,gBAAAA,KAAK,EAAE;AADF;AAPT,cAFJ;AAcE,YAAA,OAAO,EAAC,SAdV;AAeE,YAAA,WAAW,EAAC,KAfd;AAgBE,YAAA,MAAM,EAAE;AACNC,cAAAA,oBAAoB,EAAE;AADhB,aAhBV;AAmBE,YAAA,KAAK,EAAE;AACLA,cAAAA,oBAAoB,EAAE;AADjB,aAnBT;AAsBE,YAAA,aAAa,EAAE,uBAAAE,SAAS;AAAA,qBAAI/B,MAAM,CAAC+B,SAAD,CAAV;AAAA,aAtB1B;AAAA,uBAuBE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAC;AAAhC,cAvBF,EAwBE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,QAAnB;AAA4B,cAAA,KAAK,EAAC;AAAlC,cAxBF,EAyBE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,OAAnB;AAA2B,cAAA,KAAK,EAAC;AAAjC,cAzBF;AAAA;AADF;AAFF,QA1EF,EA4GE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACW,YAApB;AAAA,kBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACQ,UAApB;AAAA,oBACE,MAAC,MAAD;AAAQ,YAAA,aAAa,EAAE1B,IAAvB;AACE,YAAA,gBAAgB,EACd,KAAC,IAAD;AACE,cAAA,EAAE,EAAE,KAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB,gBADN;AAEE,cAAA,IAAI,EAAC,IAFP;AAGE,cAAA,CAAC,EAAE,CAHL;AAIE,cAAA,MAAM,EAAE;AACN2B,gBAAAA,KAAK,EAAE;AADD,eAJV;AAOE,cAAA,KAAK,EAAE;AACLA,gBAAAA,KAAK,EAAE;AADF;AAPT,cAFJ;AAcE,YAAA,OAAO,EAAC,SAdV;AAeE,YAAA,WAAW,EAAC,MAfd;AAgBE,YAAA,MAAM,EAAE;AACNC,cAAAA,oBAAoB,EAAE;AADhB,aAhBV;AAmBE,YAAA,KAAK,EAAE;AACLA,cAAAA,oBAAoB,EAAE;AADjB,aAnBT;AAsBE,YAAA,aAAa,EAAE,uBAAAE,SAAS;AAAA,qBAAI7B,OAAO,CAAC6B,SAAD,CAAX;AAAA,aAtB1B;AAAA,uBAuBE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,SAAnB;AAA6B,cAAA,KAAK,EAAC;AAAnC,cAvBF,EAwBE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,UAAnB;AAA8B,cAAA,KAAK,EAAC;AAApC,cAxBF;AAAA;AADF;AAFF,QA5GF,EA6IE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACO,WAApB;AAAA,kBACE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAEP,MAAM,CAACa,YAAtB;AAAoC,UAAA,OAAO,EAAE7B,mBAAmB,EAAhE;AAAA;AAAA;AADF,QA7IF;AAAA;AADF,IADF;AAwJD;AAGD,IAAMgB,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,SAAS,EAAC,GADD;AAETC,IAAAA,QAAQ,EAAC,EAFA;AAGTC,IAAAA,UAAU,EAAC;AAHF,GALoB;AAU/BlB,EAAAA,MAAM,EAAC;AACLmB,IAAAA,UAAU,EAAC,QADN;AAELC,IAAAA,cAAc,EAAC;AAFV,GAVwB;AAc/BlB,EAAAA,KAAK,EAAC;AACJmB,IAAAA,aAAa,EAAC,KADV;AAEJD,IAAAA,cAAc,EAAC,QAFX;AAGJE,IAAAA,UAAU,EAAC;AAHP,GAdyB;AAmB/BlB,EAAAA,UAAU,EAAC;AACTc,IAAAA,UAAU,EAAC;AADF,GAnBoB;AAsB/BK,EAAAA,UAAU,EAAC;AACTP,IAAAA,SAAS,EAAC,EADD;AAETQ,IAAAA,UAAU,EAAC;AAFF,GAtBoB;AA0B/BlB,EAAAA,UAAU,EAAC;AACTU,IAAAA,SAAS,EAAC,EADD;AAETS,IAAAA,WAAW,EAAC;AAFH,GA1BoB;AA8B/BpB,EAAAA,WAAW,EAAC;AACVW,IAAAA,SAAS,EAAC,EADA;AAEVQ,IAAAA,UAAU,EAAC,EAFD;AAGVC,IAAAA,WAAW,EAAC;AAHF,GA9BmB;AAmC/BhB,EAAAA,YAAY,EAAC;AACXO,IAAAA,SAAS,EAAC,EADC;AAEXQ,IAAAA,UAAU,EAAC,EAFA;AAGXC,IAAAA,WAAW,EAAC;AAHD,GAnCkB;AAwC/Bd,EAAAA,YAAY,EAAC;AACXI,IAAAA,eAAe,EAAC;AADL,GAxCkB;AA2C/BW,EAAAA,SAAS,EAAC;AACRL,IAAAA,aAAa,EAAC,KADN;AAERL,IAAAA,SAAS,EAAC,EAFF;AAGRQ,IAAAA,UAAU,EAAC,EAHH;AAIRC,IAAAA,WAAW,EAAC,EAJJ;AAKRN,IAAAA,UAAU,EAAC;AALH,GA3CqB;AAkD/BQ,EAAAA,UAAU,EAAC;AACTC,IAAAA,KAAK,EAAC,EADG;AAETC,IAAAA,MAAM,EAAC,EAFE;AAGTL,IAAAA,UAAU,EAAC;AAHF,GAlDoB;AAuD/BM,EAAAA,QAAQ,EAAC;AACPT,IAAAA,aAAa,EAAC,KADP;AAEPL,IAAAA,SAAS,EAAC,EAFH;AAGPQ,IAAAA,UAAU,EAAC,EAHJ;AAIPC,IAAAA,WAAW,EAAC,EAJL;AAKPL,IAAAA,cAAc,EAAC;AALR;AAvDsB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Input, NativeBaseProvider, Button, Icon, Select } from 'native-base';\r\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nimport hex_sha1 from '../functions/SHA1';\r\n\r\nexport default function Signup({ navigation }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [sex, setSex] = useState(\"\")\r\n    const [role, setRole] = useState(\"\")\r\n\r\n    \r\n    function RegistrationHandler() {\r\n        var api = 'http://52.70.229.148:8000/users/'\r\n\r\n        var fullName = name.split(\" \")\r\n        var firstName = fullName[0]\r\n        var lastName = fullName[1]\r\n    \r\n        var data = {\r\n            \"userID\": hex_sha1(email),\r\n            \"firstName\": firstName,\r\n            \"lastName\": lastName,\r\n            \"DoB\": \"_\",\r\n            \"address\": \"_\",\r\n            \"email\": email,\r\n            \"pcp\": \"_\",\r\n            \"sex\": sex,\r\n            \"role\": role\r\n        }\r\n        try {\r\n          fetch(api, {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Accept': 'application/json',\r\n                  'content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(data)\r\n          })\r\n        } catch (error) {\r\n          console.log(error)\r\n          return;\r\n        }\r\n    }\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <View style={styles.container}>\r\n        <View style={styles.Middle}>\r\n          <Text style={styles.LoginText}>Signup</Text>\r\n        </View>\r\n        <View style={styles.text2}>\r\n          <Text>Already have account? </Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate(\"Login\")} ><Text style={styles.signupText}> Login </Text></TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Name Input */}\r\n        <View style={styles.buttonStyle}>\r\n          \r\n          <View style={styles.emailInput}>\r\n            <Input\r\n              InputLeftElement={\r\n                <Icon\r\n                  as={<FontAwesome5 name=\"user-secret\" />}\r\n                  size=\"sm\"\r\n                  m={2}\r\n                  _light={{\r\n                    color: \"black\",\r\n                  }}\r\n                  _dark={{\r\n                    color: \"gray.300\",\r\n                  }}\r\n                />\r\n              }\r\n              variant=\"outline\"\r\n              placeholder=\"Name\"\r\n              _light={{\r\n                placeholderTextColor: \"blueGray.400\",\r\n              }}\r\n              _dark={{\r\n                placeholderTextColor: \"blueGray.50\",\r\n              }}\r\n              value={name}\r\n              onChangeText={setName}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* Email Input Field */}\r\n        <View style={styles.buttonStyleX}>\r\n          \r\n          <View style={styles.emailInput}>\r\n            <Input\r\n              InputLeftElement={\r\n                <Icon\r\n                  as={<MaterialCommunityIcons name=\"email\" />}\r\n                  size=\"sm\"\r\n                  m={2}\r\n                  _light={{\r\n                    color: \"black\",\r\n                  }}\r\n                  _dark={{\r\n                    color: \"gray.300\",\r\n                  }}\r\n                />\r\n              }\r\n              variant=\"outline\"\r\n              placeholder=\"Email\"\r\n              _light={{\r\n                placeholderTextColor: \"blueGray.400\",\r\n              }}\r\n              _dark={{\r\n                placeholderTextColor: \"blueGray.50\",\r\n              }}\r\n              value={email}\r\n              onChangeText={setEmail}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* Sex Input Field */}\r\n        <View style={styles.buttonStyleX}>\r\n          \r\n          <View style={styles.emailInput}>\r\n            <Select selectedValue={sex}\r\n              InputLeftElement={\r\n                <Icon\r\n                  as={<FontAwesome5 name=\"key\" />}\r\n                  size=\"sm\"\r\n                  m={2}\r\n                  _light={{\r\n                    color: \"black\",\r\n                  }}\r\n                  _dark={{\r\n                    color: \"gray.300\",\r\n                  }}\r\n                />\r\n              }\r\n              variant=\"outline\"\r\n              placeholder=\"Sex\"\r\n              _light={{\r\n                placeholderTextColor: \"blueGray.400\",\r\n              }}\r\n              _dark={{\r\n                placeholderTextColor: \"blueGray.50\",\r\n              }}\r\n              onValueChange={itemValue => setSex(itemValue)}>\r\n              <Select.Item label=\"Male\" value=\"M\" />\r\n              <Select.Item label=\"Female\" value=\"F\" />\r\n              <Select.Item label=\"Other\" value=\"O\" />\r\n            </Select>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Role Input Field */}\r\n        <View style={styles.buttonStyleX}>\r\n          \r\n          <View style={styles.emailInput}>\r\n            <Select selectedValue={role}\r\n              InputLeftElement={\r\n                <Icon\r\n                  as={<FontAwesome5 name=\"key\" />}\r\n                  size=\"sm\"\r\n                  m={2}\r\n                  _light={{\r\n                    color: \"black\",\r\n                  }}\r\n                  _dark={{\r\n                    color: \"gray.300\",\r\n                  }}\r\n                />\r\n              }\r\n              variant=\"outline\"\r\n              placeholder=\"Role\"\r\n              _light={{\r\n                placeholderTextColor: \"blueGray.400\",\r\n              }}\r\n              _dark={{\r\n                placeholderTextColor: \"blueGray.50\",\r\n              }}\r\n              onValueChange={itemValue => setRole(itemValue)}>\r\n              <Select.Item label=\"Patient\" value=\"P\" />\r\n              <Select.Item label=\"Provider\" value=\"D\" />\r\n            </Select>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Button */}\r\n        <View style={styles.buttonStyle}>\r\n          <Button style={styles.buttonDesign} onPress={RegistrationHandler()}>\r\n              REGISTER NOW\r\n          </Button>\r\n        </View>\r\n\r\n      </View>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  LoginText: {\r\n    marginTop:100,\r\n    fontSize:30,\r\n    fontWeight:'bold',\r\n  },\r\n  Middle:{\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n  },\r\n  text2:{\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    paddingTop:5\r\n  },\r\n  signupText:{\r\n    fontWeight:'bold'\r\n  },\r\n  emailField:{\r\n    marginTop:30,\r\n    marginLeft:15\r\n  },\r\n  emailInput:{\r\n    marginTop:10,\r\n    marginRight:5\r\n  },\r\n  buttonStyle:{\r\n    marginTop:30,\r\n    marginLeft:15,\r\n    marginRight:15\r\n  },\r\n  buttonStyleX:{\r\n    marginTop:12,\r\n    marginLeft:15,\r\n    marginRight:15\r\n  },\r\n  buttonDesign:{\r\n    backgroundColor:'#026efd'\r\n  },\r\n  lineStyle:{\r\n    flexDirection:'row',\r\n    marginTop:30,\r\n    marginLeft:15,\r\n    marginRight:15,\r\n    alignItems:'center'\r\n  },\r\n  imageStyle:{\r\n    width:80,\r\n    height:80,\r\n    marginLeft:20,\r\n  },\r\n  boxStyle:{\r\n    flexDirection:'row',\r\n    marginTop:30,\r\n    marginLeft:15,\r\n    marginRight:15,\r\n    justifyContent:'space-around'\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}