{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, NativeBaseProvider, Button, Icon, Select, Box, Image, AspectRatio } from 'native-base';\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport hex_sha1 from \"../functions/SHA1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Signup() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sex = _useState8[0],\n      setSex = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      role = _useState10[0],\n      setRole = _useState10[1];\n\n  function RegistrationHandler() {\n    var api = 'http://52.70.229.148:8000/users/';\n    var fullName = name.split(\" \");\n    var firstName = fullName[0];\n    var lastName = fullName[1];\n    var data = {\n      \"userID\": hex_sha1(password),\n      \"firstName\": firstName,\n      \"lastName\": lastName,\n      \"DoB\": \"_\",\n      \"address\": \"_\",\n      \"email\": email,\n      \"pcp\": \"_\",\n      \"sex\": sex,\n      \"role\": role\n    };\n    fetch(api, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  }\n\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.Middle,\n      children: _jsx(Text, {\n        style: styles.LoginText,\n        children: \"Signup\"\n      })\n    }), _jsxs(View, {\n      style: styles.text2,\n      children: [_jsx(Text, {\n        children: \"Already have account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Login\");\n        },\n        children: _jsx(Text, {\n          style: styles.signupText,\n          children: \" Login \"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.buttonStyle,\n      children: _jsx(View, {\n        style: styles.emailInput,\n        children: _jsx(Input, {\n          InputLeftElement: _jsx(Icon, {\n            as: _jsx(FontAwesome5, {\n              name: \"user-secret\"\n            }),\n            size: \"sm\",\n            m: 2,\n            _light: {\n              color: \"black\"\n            },\n            _dark: {\n              color: \"gray.300\"\n            }\n          }),\n          variant: \"outline\",\n          placeholder: \"Name\",\n          _light: {\n            placeholderTextColor: \"blueGray.400\"\n          },\n          _dark: {\n            placeholderTextColor: \"blueGray.50\"\n          },\n          value: name,\n          onChangeText: setName\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonStyleX,\n      children: _jsx(View, {\n        style: styles.emailInput,\n        children: _jsx(Input, {\n          InputLeftElement: _jsx(Icon, {\n            as: _jsx(MaterialCommunityIcons, {\n              name: \"email\"\n            }),\n            size: \"sm\",\n            m: 2,\n            _light: {\n              color: \"black\"\n            },\n            _dark: {\n              color: \"gray.300\"\n            }\n          }),\n          variant: \"outline\",\n          placeholder: \"Email\",\n          _light: {\n            placeholderTextColor: \"blueGray.400\"\n          },\n          _dark: {\n            placeholderTextColor: \"blueGray.50\"\n          },\n          value: email,\n          onChangeText: setEmail\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonStyleX,\n      children: _jsx(View, {\n        style: styles.emailInput,\n        children: _jsx(Input, {\n          InputLeftElement: _jsx(Icon, {\n            as: _jsx(FontAwesome5, {\n              name: \"key\"\n            }),\n            size: \"sm\",\n            m: 2,\n            _light: {\n              color: \"black\"\n            },\n            _dark: {\n              color: \"gray.300\"\n            }\n          }),\n          variant: \"outline\",\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          _light: {\n            placeholderTextColor: \"blueGray.400\"\n          },\n          _dark: {\n            placeholderTextColor: \"blueGray.50\"\n          },\n          value: password,\n          onChangeText: setPassword\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonStyleX,\n      children: _jsx(View, {\n        style: styles.emailInput,\n        children: _jsxs(Select, {\n          selectedValue: sex,\n          InputLeftElement: _jsx(Icon, {\n            as: _jsx(FontAwesome5, {\n              name: \"key\"\n            }),\n            size: \"sm\",\n            m: 2,\n            _light: {\n              color: \"black\"\n            },\n            _dark: {\n              color: \"gray.300\"\n            }\n          }),\n          variant: \"outline\",\n          placeholder: \"Sex\",\n          _light: {\n            placeholderTextColor: \"blueGray.400\"\n          },\n          _dark: {\n            placeholderTextColor: \"blueGray.50\"\n          },\n          onValueChange: function onValueChange(itemValue) {\n            return setSex(itemValue);\n          },\n          children: [_jsx(Select.Item, {\n            label: \"Male\",\n            value: \"M\"\n          }), _jsx(Select.Item, {\n            label: \"Female\",\n            value: \"F\"\n          }), _jsx(Select.Item, {\n            label: \"Other\",\n            value: \"O\"\n          })]\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonStyleX,\n      children: _jsx(View, {\n        style: styles.emailInput,\n        children: _jsxs(Select, {\n          selectedValue: role,\n          InputLeftElement: _jsx(Icon, {\n            as: _jsx(FontAwesome5, {\n              name: \"key\"\n            }),\n            size: \"sm\",\n            m: 2,\n            _light: {\n              color: \"black\"\n            },\n            _dark: {\n              color: \"gray.300\"\n            }\n          }),\n          variant: \"outline\",\n          placeholder: \"Role\",\n          _light: {\n            placeholderTextColor: \"blueGray.400\"\n          },\n          _dark: {\n            placeholderTextColor: \"blueGray.50\"\n          },\n          onValueChange: function onValueChange(itemValue) {\n            return setRole(itemValue);\n          },\n          children: [_jsx(Select.Item, {\n            label: \"Patient\",\n            value: \"P\"\n          }), _jsx(Select.Item, {\n            label: \"Provider\",\n            value: \"D\"\n          })]\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonStyle,\n      children: _jsx(Button, {\n        style: styles.buttonDesign,\n        onPress: RegistrationHandler(),\n        children: \"REGISTER NOW\"\n      })\n    }), _jsxs(Text, {\n      children: [name, '\\n', email, '\\n', password, '\\n', hex_sha1(password), '\\n', sex, '\\n', role]\n    })]\n  });\n}\n\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Signup, {})\n  });\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  LoginText: {\n    marginTop: 100,\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  Middle: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text2: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingTop: 5\n  },\n  signupText: {\n    fontWeight: 'bold'\n  },\n  emailField: {\n    marginTop: 30,\n    marginLeft: 15\n  },\n  emailInput: {\n    marginTop: 10,\n    marginRight: 5\n  },\n  buttonStyle: {\n    marginTop: 30,\n    marginLeft: 15,\n    marginRight: 15\n  },\n  buttonStyleX: {\n    marginTop: 12,\n    marginLeft: 15,\n    marginRight: 15\n  },\n  buttonDesign: {\n    backgroundColor: '#026efd'\n  },\n  lineStyle: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    alignItems: 'center'\n  },\n  imageStyle: {\n    width: 80,\n    height: 80,\n    marginLeft: 20\n  },\n  boxStyle: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"sources":["C:/Users/Keven/Desktop/EC530/HealthCare-Platform/HealthApp/screens/Signup.js"],"names":["StatusBar","React","useState","Input","NativeBaseProvider","Button","Icon","Select","Box","Image","AspectRatio","FontAwesome5","MaterialCommunityIcons","useNavigation","hex_sha1","Signup","name","setName","email","setEmail","password","setPassword","sex","setSex","role","setRole","RegistrationHandler","api","fullName","split","firstName","lastName","data","fetch","method","body","JSON","stringify","navigation","styles","container","Middle","LoginText","text2","navigate","signupText","buttonStyle","emailInput","color","placeholderTextColor","buttonStyleX","itemValue","buttonDesign","StyleSheet","create","flex","backgroundColor","marginTop","fontSize","fontWeight","alignItems","justifyContent","flexDirection","paddingTop","emailField","marginLeft","marginRight","lineStyle","imageStyle","width","height","boxStyle"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Input, NativeBaseProvider, Button, Icon, Select, Box, Image, AspectRatio } from 'native-base';\r\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n//import { alignContent, flex, flexDirection, width } from '@styled-system';\r\n\r\nimport hex_sha1 from '../functions/SHA1';\r\n\r\n\r\nfunction Signup() {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [sex, setSex] = useState(\"\")\r\n    const [role, setRole] = useState(\"\")\r\n    \r\n    function RegistrationHandler() {\r\n        var api = 'http://52.70.229.148:8000/users/'\r\n\r\n        var fullName = name.split(\" \")\r\n        var firstName = fullName[0]\r\n        var lastName = fullName[1]\r\n    \r\n        var data = {\r\n            \"userID\": hex_sha1(password),\r\n            \"firstName\": firstName,\r\n            \"lastName\": lastName,\r\n            \"DoB\": \"_\",\r\n            \"address\": \"_\",\r\n            \"email\": email,\r\n            \"pcp\": \"_\",\r\n            \"sex\": sex,\r\n            \"role\": role\r\n        }\r\n    \r\n        fetch(api, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n    const navigation = useNavigation();\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.Middle}>\r\n        <Text style={styles.LoginText}>Signup</Text>\r\n      </View>\r\n      <View style={styles.text2}>\r\n        <Text>Already have account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"Login\")} ><Text style={styles.signupText}> Login </Text></TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Name Input */}\r\n      <View style={styles.buttonStyle}>\r\n        \r\n        <View style={styles.emailInput}>\r\n          <Input\r\n            InputLeftElement={\r\n              <Icon\r\n                as={<FontAwesome5 name=\"user-secret\" />}\r\n                size=\"sm\"\r\n                m={2}\r\n                _light={{\r\n                  color: \"black\",\r\n                }}\r\n                _dark={{\r\n                  color: \"gray.300\",\r\n                }}\r\n              />\r\n            }\r\n            variant=\"outline\"\r\n            placeholder=\"Name\"\r\n            _light={{\r\n              placeholderTextColor: \"blueGray.400\",\r\n            }}\r\n            _dark={{\r\n              placeholderTextColor: \"blueGray.50\",\r\n            }}\r\n            value={name}\r\n            onChangeText={setName}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      {/* Email Input Field */}\r\n      <View style={styles.buttonStyleX}>\r\n        \r\n        <View style={styles.emailInput}>\r\n          <Input\r\n            InputLeftElement={\r\n              <Icon\r\n                as={<MaterialCommunityIcons name=\"email\" />}\r\n                size=\"sm\"\r\n                m={2}\r\n                _light={{\r\n                  color: \"black\",\r\n                }}\r\n                _dark={{\r\n                  color: \"gray.300\",\r\n                }}\r\n              />\r\n            }\r\n            variant=\"outline\"\r\n            placeholder=\"Email\"\r\n            _light={{\r\n              placeholderTextColor: \"blueGray.400\",\r\n            }}\r\n            _dark={{\r\n              placeholderTextColor: \"blueGray.50\",\r\n            }}\r\n            value={email}\r\n            onChangeText={setEmail}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      {/* Password Input Field */}\r\n      <View style={styles.buttonStyleX}>\r\n        \r\n        <View style={styles.emailInput}>\r\n          <Input\r\n            InputLeftElement={\r\n              <Icon\r\n                as={<FontAwesome5 name=\"key\" />}\r\n                size=\"sm\"\r\n                m={2}\r\n                _light={{\r\n                  color: \"black\",\r\n                }}\r\n                _dark={{\r\n                  color: \"gray.300\",\r\n                }}\r\n              />\r\n            }\r\n            variant=\"outline\"\r\n            secureTextEntry={true}\r\n            placeholder=\"Password\"\r\n            _light={{\r\n              placeholderTextColor: \"blueGray.400\",\r\n            }}\r\n            _dark={{\r\n              placeholderTextColor: \"blueGray.50\",\r\n            }}\r\n            value={password}\r\n            onChangeText={setPassword}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      {/* Sex Input Field */}\r\n      <View style={styles.buttonStyleX}>\r\n        \r\n        <View style={styles.emailInput}>\r\n          <Select selectedValue={sex}\r\n            InputLeftElement={\r\n              <Icon\r\n                as={<FontAwesome5 name=\"key\" />}\r\n                size=\"sm\"\r\n                m={2}\r\n                _light={{\r\n                  color: \"black\",\r\n                }}\r\n                _dark={{\r\n                  color: \"gray.300\",\r\n                }}\r\n              />\r\n            }\r\n            variant=\"outline\"\r\n            placeholder=\"Sex\"\r\n            _light={{\r\n              placeholderTextColor: \"blueGray.400\",\r\n            }}\r\n            _dark={{\r\n              placeholderTextColor: \"blueGray.50\",\r\n            }}\r\n            onValueChange={itemValue => setSex(itemValue)}>\r\n            <Select.Item label=\"Male\" value=\"M\" />\r\n            <Select.Item label=\"Female\" value=\"F\" />\r\n            <Select.Item label=\"Other\" value=\"O\" />\r\n          </Select>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Sex Input Field */}\r\n      <View style={styles.buttonStyleX}>\r\n        \r\n        <View style={styles.emailInput}>\r\n          <Select selectedValue={role}\r\n            InputLeftElement={\r\n              <Icon\r\n                as={<FontAwesome5 name=\"key\" />}\r\n                size=\"sm\"\r\n                m={2}\r\n                _light={{\r\n                  color: \"black\",\r\n                }}\r\n                _dark={{\r\n                  color: \"gray.300\",\r\n                }}\r\n              />\r\n            }\r\n            variant=\"outline\"\r\n            placeholder=\"Role\"\r\n            _light={{\r\n              placeholderTextColor: \"blueGray.400\",\r\n            }}\r\n            _dark={{\r\n              placeholderTextColor: \"blueGray.50\",\r\n            }}\r\n            onValueChange={itemValue => setRole(itemValue)}>\r\n            <Select.Item label=\"Patient\" value=\"P\" />\r\n            <Select.Item label=\"Provider\" value=\"D\" />\r\n          </Select>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Button */}\r\n      <View style={styles.buttonStyle}>\r\n        <Button style={styles.buttonDesign} onPress={RegistrationHandler()}>\r\n            REGISTER NOW\r\n        </Button>\r\n      </View>\r\n\r\n      <Text>{name}{'\\n'}{email}{'\\n'}{password}{'\\n'}{hex_sha1(password)}{'\\n'}{sex}{'\\n'}{role}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default () => {\r\n  return (\r\n    <NativeBaseProvider>\r\n     \r\n        <Signup />\r\n      \r\n    </NativeBaseProvider>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  LoginText: {\r\n    marginTop:100,\r\n    fontSize:30,\r\n    fontWeight:'bold',\r\n  },\r\n  Middle:{\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n  },\r\n  text2:{\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    paddingTop:5\r\n  },\r\n  signupText:{\r\n    fontWeight:'bold'\r\n  },\r\n  emailField:{\r\n    marginTop:30,\r\n    marginLeft:15\r\n  },\r\n  emailInput:{\r\n    marginTop:10,\r\n    marginRight:5\r\n  },\r\n  buttonStyle:{\r\n    marginTop:30,\r\n    marginLeft:15,\r\n    marginRight:15\r\n  },\r\n  buttonStyleX:{\r\n    marginTop:12,\r\n    marginLeft:15,\r\n    marginRight:15\r\n  },\r\n  buttonDesign:{\r\n    backgroundColor:'#026efd'\r\n  },\r\n  lineStyle:{\r\n    flexDirection:'row',\r\n    marginTop:30,\r\n    marginLeft:15,\r\n    marginRight:15,\r\n    alignItems:'center'\r\n  },\r\n  imageStyle:{\r\n    width:80,\r\n    height:80,\r\n    marginLeft:20,\r\n  },\r\n  boxStyle:{\r\n    flexDirection:'row',\r\n    marginTop:30,\r\n    marginLeft:15,\r\n    marginRight:15,\r\n    justifyContent:'space-around'\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}